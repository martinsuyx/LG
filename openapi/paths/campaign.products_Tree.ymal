openapi: 3.0.3
info:
  title: Campaign Products Tree API
  version: '1.0.0'

paths:
  /api/v1/campaigns/{campaign_id}/products_tree:
    get:
      tags: [Campaigns]
      summary: Get products & plans tree for a campaign
      operationId: campaignProductsTree
      parameters:
        - in: path
          name: campaign_id
          required: true
          schema: { type: string }
        - in: query
          name: q
          schema: { type: string }
          description: keyword to filter products/plans
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampaignProductNode'
              examples:
                demo:
                  value:
                    - product_id: P001
                      product_name: 宽带新装
                      external_key: PROD_WB_200M
                      keywords: [宽带, 200M]
                      plans:
                        - plan_id: PLAN59
                          plan_name: 59 元套餐
                          price: 59
                          commission_default: { type: percent, value: 10 }
                          caps: { max_commission: 15, min_commission: 5, allow_override: true, approval_required: false }
                        - plan_id: PLAN99
                          plan_name: 99 元套餐
                          price: 99
                          commission_default: { type: fixed, value: 20 }
                          caps: { max_commission: 30, min_commission: 5, allow_override: true, approval_required: true }

components:
  schemas:
    CommissionFixed:
      type: object
      properties:
        type: { type: string, enum: [fixed] }
        value: { type: number, format: double, minimum: 0 }
      required: [type, value]
    CommissionPercent:
      type: object
      properties:
        type: { type: string, enum: [percent] }
        value: { type: number, format: double, minimum: 0, maximum: 100 }
      required: [type, value]
    CommissionTierItem:
      type: object
      properties:
        threshold: { type: number, format: double, minimum: 0 }
        value: { type: number, format: double, minimum: 0 }
        kind: { type: string, enum: [yuan, percent] }
      required: [threshold, value, kind]
    CommissionTier:
      type: object
      properties:
        type: { type: string, enum: [tier] }
        metric: { type: string, enum: [amount, count, activate], default: amount }
        unit: { type: string, enum: [yuan, pcs], default: yuan }
        tiers:
          type: array
          items: { $ref: '#/components/schemas/CommissionTierItem' }
      required: [type, metric, unit, tiers]
    Commission:
      oneOf:
        - $ref: '#/components/schemas/CommissionFixed'
        - $ref: '#/components/schemas/CommissionPercent'
        - $ref: '#/components/schemas/CommissionTier'
      discriminator:
        propertyName: type
        mapping:
          fixed: '#/components/schemas/CommissionFixed'
          percent: '#/components/schemas/CommissionPercent'
          tier: '#/components/schemas/CommissionTier'

    PlanCaps:
      type: object
      properties:
        max_commission: { type: number, format: double }
        min_commission: { type: number, format: double }
        allow_override: { type: boolean }
        approval_required: { type: boolean }

    CampaignPlan:
      type: object
      properties:
        plan_id: { type: string }
        plan_name: { type: string }
        price: { type: number, format: double }
        commission_default: { $ref: '#/components/schemas/Commission' }
        caps: { $ref: '#/components/schemas/PlanCaps' }
      required: [plan_id, plan_name, price, commission_default]

    CampaignProductNode:
      type: object
      properties:
        product_id: { type: string }
        product_name: { type: string }
        external_key: { type: string }
        keywords:
          type: array
          items: { type: string }
        plans:
          type: array
          items: { $ref: '#/components/schemas/CampaignPlan' }
      required: [product_id, product_name]
